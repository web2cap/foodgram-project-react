name: foodgram_main

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.6

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line
        pip install -r backend/foodgram-project/requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd backend/foodgram-project/
        python manage.py test
  build_and_push_to_docker_hub_backend:
    name: Push web Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          file: ./backend/foodgram-project/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_web:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub_backend
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop foodgram_web
            sudo docker compose rm foodgram_web -f
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram_web:latest
            rm foodgram/.env
            touch foodgram/.env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> foodgram/.env.env
            echo DB_NAME=${{ secrets.DB_NAME }} >> foodgram/.env.env
            echo DB_HOST=${{ secrets.DB_HOST }} >> foodgram/.env.env
            echo DB_PORT=${{ secrets.DB_PORT }} >> foodgram/.env.env
            echo ST_SECRET_KEY="${{ secrets.ST_SECRET_KEY }}" >> foodgram/.env.env
            echo ST_ADMIN_LOGIN="${{ secrets.ST_ADMIN_LOGIN }}" >> foodgram/.env.env
            echo ST_ADMIN_EMAIL="${{ secrets.ST_ADMIN_EMAIL }}" >> foodgram/.env.env
            echo ST_ADMIN_PASS="${{ secrets.ST_ADMIN_PASS }}" >> foodgram/.env.env
            echo DB_USER="${{ secrets.DB_USER }}" >> foodgram/.env.env
            echo DB_PASSWORD="${{ secrets.DB_PASSWORD }}" >> foodgram/.env.env
            sudo docker compose up -d 
            sudo docker compose exec foodgram_web python manage.py migrate
            sudo docker compose exec foodgram_web python manage.py collectstatic --no-input

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} Completed successfully! 